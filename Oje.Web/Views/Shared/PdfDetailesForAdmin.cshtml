@{
    Layout = "~/Areas/Account/Views/Shared/_LayoutAdmin.cshtml";
    if(ViewBag.newLayoutName != null)
    {
        Layout = ViewBag.newLayoutName;
    }
    ViewBag.Title = Model.ppfTitle;
}
@model Oje.Infrastructure.Models.Pdf.ProposalFilledForm.ProposalFilledFormPdfVM
@using Oje.Infrastructure.Services

<style>
    .pdfBody {
        width: 100%;
        margin-left: auto;
        margin-right: auto;
        direction: rtl;
        padding: 10px;
        text-align: right;
        background-color:white;
    }
     .fontSize {
        font-size:0.99em;
    }
    .printBox {
        border: 1px solid silver;
        margin-bottom:10px;
        border-radius:4px;
    }

    .boxTitle {
        border-bottom: 1px solid silver;
        font-weight: bold;
        padding: 10px;
    }
    .printItem{
        font-size:9pt;
    }
    .boxContent{
        padding:15px;
    }
    @{
        if(ViewBag.isPrint == true)
        {
            ViewContext.Writer.Write("  body{background-color:white;}" + Environment.NewLine );
            ViewContext.Writer.Write("  main { margin-right:0px !important; }" + Environment.NewLine);
            ViewContext.Writer.Write("  aside{display:none!important;}" + Environment.NewLine);
            ViewContext.Writer.Write("  header{display:none!important;}"  + Environment.NewLine);
            ViewContext.Writer.Write("  header{display:none!important;}" + Environment.NewLine);
            ViewContext.Writer.Write("  footer{display:none!important;}" + Environment.NewLine);
            ViewContext.Writer.Write("  main{background:none!important;}" + Environment.NewLine);
            ViewContext.Writer.Write("  section{-webkit-box-shadow:none!important;}" + Environment.NewLine);
            ViewContext.Writer.Write("  section{box-shadow:none!important;}" + Environment.NewLine);
        }
    }
   .pdfHeader{
       display:flex;
       align-items: stretch;
   }
   .headerItem{
       padding:10px;
       flex-grow:1
   }
   .headerItem:last-child{
       text-align:left;
   }
   .ppfTitle{
       text-align:center;
       font-weight:bold;
       flex-grow:5;
   }
   .pdfFooterSection{
       padding:15px;
   }
</style>
<script>
    if(window["$"]) {
        $('.mainLoaderForAdminArea').css('display', 'none');
    }
</script>

@{
    if(Layout == "_WebLayout")
    {
        ViewContext.Writer.Write("<div class='myContainer' ><section class='globalSection'>");
    }
}
<div class="pdfBody">
    @{
        if(!string.IsNullOrEmpty(Model.companyTitle))
        {
             <div style="text-align:center;">
                <img src="@Model.companyImage" style="width:70px;" />
            </div>
        }
    }
    <div class="pdfHeader">
        <div class="headerItem" >شماره:@(Model.id)</div><div class="headerItem ppfTitle">@(Model.ppfTitle)</div><div class="headerItem" >تاریخ:@(Model.ppfCreateDate)</div>
    </div>
    <div>
        @{
            if(Model.printDescriptions != null && Model.printDescriptions.Any(t => t.type == Oje.Infrastructure.Enums.ProposalFormPrintDescrptionType.Header)) {
                ViewContext.Writer.Write(Model.printDescriptions.Where(t => t.type == Oje.Infrastructure.Enums.ProposalFormPrintDescrptionType.Header).Select(t => t.descption).FirstOrDefault());
            }
        }
    </div>
    @{
        if(Model.ProposalFilledFormPdfGroupVMs != null && Model.ProposalFilledFormPdfGroupVMs.Count > 0)
        {
            foreach(var group in Model.ProposalFilledFormPdfGroupVMs)
            {
                   <div class="printBox">
                    <div class="boxTitle">@(group.title)</div>
                    <div class="boxContent ">
                        <div class="row">
                            @{
                                if(group.ProposalFilledFormPdfGroupItems != null && group.ProposalFilledFormPdfGroupItems.Count > 0)
                                {
                                    foreach(var gorupItem in group.ProposalFilledFormPdfGroupItems )
                                    {
                                         <div class="printItem @(gorupItem.cssClass)">
                                            <label class="fontSize" >@(!string.IsNullOrEmpty(gorupItem.title) ? gorupItem.title + ":":"") <strong class="fontSize">@(gorupItem.value)</strong> </label>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
            }
        }
    }
 
    <div class="pdfFooterSection">
        <div>تاییدیه الکترونیکی بیمه گذار @(!string.IsNullOrEmpty(Model.createUserFullname.Trim()) ? "("+ Model.createUserFullname.Trim() +")" : "")</div>
    </div>
    <div>
        @{
            if(Model.printDescriptions != null && Model.printDescriptions.Any(t => t.type == Oje.Infrastructure.Enums.ProposalFormPrintDescrptionType.Footer)) {
                ViewContext.Writer.Write(Model.printDescriptions.Where(t => t.type == Oje.Infrastructure.Enums.ProposalFormPrintDescrptionType.Footer).Select(t => t.descption).FirstOrDefault());
            }
        }
    </div>
    @{
        bool canSeeW8ForConfirm = true;
        bool canSeeNeedSpecialist = true;
        bool canSeeConfirm = true;
        bool canSeeIssue = true;
        bool canSeeReject = true;
        if(ViewBag.isPrint == null || ViewBag.isPrint == false)
        {
            if(ViewBag.cName == "ProposalFilledFormConfirm")
            {
                canSeeW8ForConfirm = false;
                canSeeNeedSpecialist = false;
                canSeeConfirm = false;
                canSeeReject = false;
            } else if(ViewBag.cName == "ProposalFilledFormIssue")
            {
                canSeeW8ForConfirm = false;
                canSeeNeedSpecialist = false;
                canSeeConfirm = false;
                canSeeIssue = false;
                canSeeReject = false;
            } else if(ViewBag.cName == "ProposalFilledFormNeedSpecialist")
            {
                canSeeW8ForConfirm = false;
                canSeeNeedSpecialist = false;
            } else if(ViewBag.cName == "ProposalFilledFormNew")
            {
                
            } else if(ViewBag.cName == "ProposalFilledFormNotIssue")
            {
                canSeeW8ForConfirm = false;
                canSeeNeedSpecialist = false;
                canSeeConfirm = false;
                canSeeIssue = false;
                canSeeReject = false;
            } else if(ViewBag.cName == "ProposalFilledFormW8ForConfirm")
            {
                canSeeW8ForConfirm = false;
            } else
            {
                canSeeW8ForConfirm = false;
                canSeeNeedSpecialist = false;
                canSeeConfirm = false;
                canSeeIssue = false;
                canSeeReject = false;
            }
            <div style="justify-content:center;" class="row">
             @{
                    if(canSeeW8ForConfirm == true)
                    {
                         <div class="col-md-2 col-lg-2 col-sm-2 col-xs-12" style="text-align:center;padding-top:10px;">
                            <button data-change-status data-success-url="/ProposalFilledForm/ProposalFilledFormW8ForConfirm/Index" data-status="2" data-id="@Model.proposalFilledFormId" class="btn btn-primary btn-success btn-block" >در انتظار تایید</button>
                        </div>
                    }
                    if(canSeeNeedSpecialist == true)
                    {
                        <div class="col-md-2 col-lg-2 col-sm-2 col-xs-12" style="text-align:center;padding-top:10px;">
                            <button data-change-status data-success-url="/ProposalFilledForm/ProposalFilledFormNeedSpecialist/Index" data-status="3" data-id="@Model.proposalFilledFormId" class="btn btn-primary btn-success btn-block" >نیاز به کارشناسی</button>
                        </div>
                    }
                    if(canSeeConfirm == true)
                    {
                         <div class="col-md-2 col-lg-2 col-sm-2 col-xs-12" style="text-align:center;padding-top:10px;">
                            <button data-change-status data-success-url="/ProposalFilledForm/ProposalFilledFormConfirm/Index" data-status="4" data-id="@Model.proposalFilledFormId" class="btn btn-primary btn-success btn-block" >تایید شده</button>
                        </div>
                    }
                    if(canSeeIssue == true)
                    {
                        <div class="col-md-2 col-lg-2 col-sm-2 col-xs-12" style="text-align:center;padding-top:10px;">
                            <button data-issue data-success-url="/ProposalFilledForm/ProposalFilledFormIssue/Index" data-status="5" data-id="@Model.proposalFilledFormId" class="btn btn-primary btn-success btn-block" >ارسال برای صدور</button>
                        </div>
                    }
                    if(canSeeReject == true)
                    {
                         <div class="col-md-2 col-lg-2 col-sm-2 col-xs-12" style="text-align:center;padding-top:10px;">
                            <button data-change-status data-success-url="/ProposalFilledForm/ProposalFilledFormNotIssue/Index" data-status="6" data-id="@Model.proposalFilledFormId" class="btn btn-primary btn-warning btn-block" >رد فرم پیشنهاد</button>
                        </div>
                    }
                }
                <script>
                    $('button[data-change-status]').click(function() 
                    {
                        var curButton = this;
                        var postData = new FormData();
                        postData.append('id', $(this).attr('data-id'));
                        postData.append('status', $(this).attr('data-status'));
                        showLoader($(curButton).closest('.row'));
                        var successUrl = $(this).attr('data-success-url');
                        postForm('/ProposalFilledForm/@(ViewBag.cName)/UpdateStatus',postData , function(res) { if(res && res.isSuccess == true) location.href=successUrl; }, null, function () { hideLoader($(curButton).closest('.row'));})
                    });
                    $('button[data-issue]').click(function() {
                        var curUrl = $(this).attr('data-success-url');
                        if($('#ProposalFilledFormConfirmissuePPFModal').length == 0) {
                            $('body').append(getModualTemplate(
                                {
                                "id": "ProposalFilledFormConfirmissuePPFModal",
                                "title": "صدور بیمه نامه",
                                "ctrls": [
                                {
                                    "name": "id",
                                    "type": "hidden"
                                },
                                {
                                    "parentCL": "col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12",
                                    "name": "startDate",
                                    "type": "persianDateTime",
                                    "label": "تاریخ شروع",
                                    "isRequired": true,
                                    "minDateValidation": 1,
                                    "maxDateValidation": 365
                                },
                                {
                                    "parentCL": "col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12",
                                    "name": "endDate",
                                    "type": "persianDateTime",
                                    "label": "تاریخ پایان",
                                    "isRequired": true,
                                    "minDateValidation": 2,
                                    "maxDateValidation": 730
                                },
                                {
                                    "parentCL": "col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12",
                                    "name": "insuranceNumber",
                                    "type": "text",
                                    "label": "شماره بیمه نامه",
                                    "isRequired": true
                                },
                                {
                                    "parentCL": "col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12",
                                    "name": "description",
                                    "type": "text",
                                    "label": "توضیحات"
                                }
                                ],
                                "actions": [
                                {
                                    "title": "بستن",
                                    "onClick": "closeThisModal(this)",
                                    "class": "btn-secondary"
                                },
                                {
                                    "title": "ذخیره",
                                    "onClick": "postModalData(this, '', '/ProposalFilledForm/ProposalFilledFormConfirm/IssuePPF', null, '"+ curUrl +"')",
                                    "class": "btn-primary"
                                }
                                ]
                            }
                            ));
                            executeArrFunctions();
                            $('#ProposalFilledFormConfirmissuePPFModal').find('input[name="id"]').val($(this).attr('data-id'));
                            
                        }
                        $('#ProposalFilledFormConfirmissuePPFModal').modal('show');
                    });
                </script>
            </div>
        }
    }
    
    <div style="justify-content:center;" class="row">
        @{
            if(Model.price.ToLongReturnZiro() > 0 && ViewBag.isPrint == false && string.IsNullOrEmpty(Model.traceCode) && Model.price == -56123512)
            {
                <div class="col-md-3 col-lg-3 col-sm-3 col-xs-12" style="text-align:center;padding-top:10px;">
                    <a href="/Payment/Payment/GetWayList?status=@(System.Net.WebUtility.UrlEncode(("1,"+ Model.proposalFilledFormId +","+ Model.price.Value +"," + Context.Request.Path + Context.Request.QueryString + "," + Model.agentUserId).Encrypt2()))" class="btn btn-primary btn-success btn-block" >پرداخت به حساب نماینده واحد صدور بیمه نامه</a>
                </div>
                 <div class="col-md-3 col-lg-3 col-sm-3 col-xs-12" style="text-align:center;padding-top:10px;">
                    <a style="border-color:silver;background-color:silver;cursor:default;" class="btn btn-primary btn-success btn-block" >پرداخت مستقیم به حساب شرکت @(Model.companyTitle) </a>
                </div>
                if(Model.loginUserWalletBalance >= Model.price.ToLongReturnZiro())
                {
                    <div class="col-md-3 col-lg-3 col-sm-3 col-xs-12" style="text-align:center;padding-top:10px;">
                        <a id="walletPaymentButton" style="color:white;cursor:pointer;" class="btn btn-primary btn-success btn-block" >پرداخت از کیف پول (موجودی : @Model.loginUserWalletBalance.ToString("###,###") ریال )</a>
                    </div>
                    <script>
                    $('#walletPaymentButton').click(function() {
                        var curButtonHolder = $(this).closest('div');
                        confirmDialog('پرداخت از کیف پول', 'آیا اطمینان دارید ؟', function () {
                            var postData = new FormData();
                            postData.append('id', @(Model.proposalFilledFormId));
                            postData.append('type', 1);
                            showLoader(curButtonHolder)
                            postForm('/Payment/WalletTransaction/Pay', postData, function (res) { if(res && res.isSuccess ) location.reload();  }, null, function () { hideLoader(curButtonHolder) });
                        });
                    });
                </script>
                }
            }
        }
    </div>
</div>

@{
    if(Layout == "_WebLayout")
    {
        ViewContext.Writer.Write("</section></div>");
    }
}

