@{
    Layout = "_WebLayout";
    ViewBag.Title = Model.ppfTitle;
    if(ViewBag.targetLayout != null)
    {
        Layout = ViewBag.targetLayout;
    }

    if(ViewBag.ignoreMaster == true)
    {
        Layout = null;
    }
}
@model Oje.Section.RegisterForm.Models.View.userFilledRegisterFormDetailesVM
@using Oje.Infrastructure.Services

<style>
    .pdfBody {
        width: 100%;
        margin-left: auto;
        margin-right: auto;
        direction: rtl;
        padding: 10px;
        text-align: right;
        background-color:white;
    }

    .printBox {
        border: 1px solid silver;
        margin-bottom:10px;
        border-radius:4px;
    }

    .boxTitle {
        border-bottom: 1px solid silver;
        font-weight: bold;
        padding: 10px;
    }
    .printItem{
        font-size:9pt;
    }
    .boxContent{
        padding:15px;
    }
    @{
        if(ViewBag.isPrint == true)
        {
            ViewContext.Writer.Write("  body{background-color:white;}" + Environment.NewLine );
            ViewContext.Writer.Write("  main { margin-right:0px !important; }" + Environment.NewLine);
            ViewContext.Writer.Write("  aside{display:none!important;}" + Environment.NewLine);
            ViewContext.Writer.Write("  header{display:none!important;}"  + Environment.NewLine);
            ViewContext.Writer.Write("  header{display:none!important;}" + Environment.NewLine);
            ViewContext.Writer.Write("  footer{display:none!important;}" + Environment.NewLine);
            ViewContext.Writer.Write("  main{background:none!important;}" + Environment.NewLine);
            ViewContext.Writer.Write("  section{-webkit-box-shadow:none!important;}" + Environment.NewLine);
            ViewContext.Writer.Write("  section{box-shadow:none!important;}" + Environment.NewLine);
        }
    }
   .pdfHeader{
       display:flex;
       align-items: stretch;
   }
   .headerItem{
       padding:10px;
       flex-grow:1
   }
   .headerItem:last-child{
       text-align:left;
   }
   .ppfTitle{
       text-align:center;
       font-weight:bold;
       flex-grow:5;
   }
   .pdfFooterSection{
       padding:15px;
   }
</style>
<script>
    if(window["$"]) {
        $('.mainLoaderForAdminArea').css('display', 'none');
    }
</script>

@{
    if(Layout == "_WebLayout")
    {
        ViewContext.Writer.Write("<div class='myContainer' ><section class='globalSection'>");
    }
}
<div class="pdfBody">
    @{
        if(!string.IsNullOrEmpty(Model.companyTitle))
        {
             <div style="text-align:center;">
                <img src="@Model.companyImage" style="width:150px;" />
            </div>
        }
    }
    <div class="pdfHeader">
        <div class="headerItem" >شماره:@(Model.id)</div><div class="headerItem ppfTitle">@(Model.ppfTitle)</div><div class="headerItem" >تاریخ:@(Model.ppfCreateDate)</div>
    </div>
    <div>
        @{
            if(!string.IsNullOrEmpty(Model.headerTemplate)) {
                ViewContext.Writer.Write(Model.headerTemplate);
            }
        }
    </div>
    @{
        if(Model.groups != null && Model.groups.Count > 0)
        {
            foreach(var group in Model.groups)
            {
                   <div class="printBox">
                    <div class="boxTitle">@(group.title)</div>
                    <div class="boxContent ">
                        <div class="row">
                            @{
                                if(group.items != null && group.items.Count > 0)
                                {
                                    foreach(var gorupItem in group.items )
                                    {
                                         <div class="printItem @(gorupItem.cssClass)">
                                            <label>@(!string.IsNullOrEmpty(gorupItem.title) ? gorupItem.title + ":":"") <strong>@(gorupItem.value)</strong> </label>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>
            }
        }
    }
    <div>
        @{
            if (!string.IsNullOrEmpty(Model.footerTemplate)) {
                ViewContext.Writer.Write(Model.footerTemplate);
            }
        }
    </div>

    <div class="row">
        @{
            if(Model.price.ToLongReturnZiro() > 0 && ViewBag.isPrint == false && string.IsNullOrEmpty(Model.traceCode))
            {
                if(Model.paymentUserId.ToLongReturnZiro() > 0)
                {
                    <div class="col-md-3 col-lg-3 col-sm-3 col-xs-12" style="text-align:center;padding-top:10px;">
                        <a id="paymentButton" href="/Payment/Payment/GetWayList?status=@(("2,"+ Model.proposalFilledFormId +","+ Model.price.Value +"," + Context.Request.Path + Context.Request.QueryString + "," + Model.paymentUserId).Encrypt2())" class="btn btn-primary btn-success btn-block" >پرداخت از طریق درگاه</a>
                    </div>
                }
                
                 <div class="col-md-3 col-lg-3 col-sm-3 col-xs-12" style="text-align:center;padding-top:10px;">
                    <a id="cardNoPaymentButton" href="#" class="btn btn-primary btn-success btn-block" >کارت به کارت</a>
                </div>
                <script>
                    $('#paymentButton').click(function(e) {
                        e.preventDefault();
                        e.stopPropagation();

                        var curUrlWithQuiry = $(this).attr('href');
                        if(curUrlWithQuiry && curUrlWithQuiry.indexOf('?') > 0) {
                            var curUrl = curUrlWithQuiry.split('?')[0];
                            var status = curUrlWithQuiry.split('?')[1].split('status=')[1];
                            var fId = uuidv4RemoveDash();
                            $('body').append('<form action="'+ curUrl +'" method="post" id="'+ fId +'" ><input type="hidden" value="'+status+'" name="status" /></form>');
                            $('#' + fId).submit();
                        }

                        return false;
                    });
                    $('#cardNoPaymentButton').click(function(e) {
                        e.preventDefault();
                        e.stopPropagation();

                        if($('#cardToCardModal').length == 0) {
                            $('body').append(getModualTemplate({
                                id: 'cardToCardModal',
                                title: 'کارت به کارت',
                                ctrls: [
                                    {
                                      "name": "fid",
                                      "type": "hidden"
                                    },
					                {
                                      "parentCL": "col-md-12 col-sm-12 col-xs-12 col-lg-12",
                                      "name": "targetBankCardNo",
                                      "type": "text",
                                      "label": "شماره کارت مقصد",
                                      "disabled": true,
                                      "ltr": true,
                                      "fontSize":"1.5em"
                                    },
					                {
                                      "parentCL": "col-md-12 col-sm-12 col-xs-12 col-lg-12",
                                      "name": "card",
                                      "type": "text",
                                      "label": "شماره کارت مبدا",
                                      "isRequired": true,
					                  "ltr": true,
					                  "mask":"9999 9999 9999 9999",
                                      "validations": [
                                        {
                                          "reg": "[0-9]{4} [0-9]{4} [0-9]{4} [0-9]{4}",
                                          "msg": "شماره کارت مبدا صحیح نمی باشد"
                                        }
                                      ]
                                    },
                                    {
                                      "parentCL": "col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12",
                                      "name": "refferCode",
                                      "type": "text",
                                      "label": "کد پیگیری",
                                      "ltr": true,
                                      "isRequired": true
                                    },
                                    {
                                      "parentCL": "col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12",
                                      "name": "price",
                                      "type": "text",
                                      "label": "مبلغ",
                                      "ltr": true,
                                      "isRequired": true,
                                      "seperator": true
                                    },
                                    {
                                      "parentCL": "col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12",
                                      "name": "pDate",
                                      "type": "persianDateTime",
                                      "label": "تاریخ پرداخت",
                                      "ltr": true,
                                      "isRequired": true
                                    },
                                    {
                                      "parentCL": "col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12",
                                      "name": "mainImage",
                                      "type": "file",
                                      "label": "تصویر رسید پرداخت",
                                      "acceptEx": ".jpg,.png,.jpeg",
                                      "isRequired": true
                                    }
                                ],
                                actions:[
                                    {
                                      "title": "بستن",
                                      "onClick": "closeThisModal(this)",
                                      "class": "btn-secondary"
                                    },
                                    {
                                      "title": "ذخیره",
                                      "onClick": "postModalData(this, '', '/Register/CardPayment', null, null, function() {location.reload();})",
                                      "class": "btn-primary"
                                    }
                                ]
                            }));
                        }
                        executeArrFunctions();
                        clearForm($('#cardToCardModal'));
                        bindForm({fid: '@(Model.proposalFilledFormId)'}, $('#cardToCardModal'));

                        postForm('/Register/GetPaymentInfo', new FormData(), function(res) 
                        {
                            if(res && res.isSuccess == undefined) {
                                bindForm(res, $('#cardToCardModal'));
                                $('#cardToCardModal').modal('show');
                            }
                        });

                        return false;
                    });
                </script>
            }
        }
        @{
            if(ViewBag.isPrint == false && Model.isPayed == true)
            {
                 <div class="col-md-3 col-lg-3 col-sm-3 col-xs-12" style="text-align:center;padding-top:10px;">
                    <a  href="/Register/DownloadPdf?id=@Model.proposalFilledFormId" class="btn btn-primary btn-success btn-block" >دانلود PDF</a>
                </div>
            }
        }
    </div>
</div>

@{
    if(Layout == "_WebLayout")
    {
        ViewContext.Writer.Write("</section></div>");
    }
}
